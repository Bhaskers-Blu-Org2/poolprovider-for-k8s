# Need to create the opaque secret vsts once in namespace azuredevops before running this app.
# kubectl create secret generic vsts --from-literal=VSTS_TOKEN=<PAT TOKEN> --from-literal=VSTS_ACCOUNT=<Account name>  --from-literal=VSTS_POOL=<Pool name> -n azuredevops
apiVersion: v1
kind: Namespace
metadata:
  name: azuredevops
  labels:
    app: k8s-poolprovider
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: defaultrole-binding
  namespace: azuredevops
subjects:
  - kind: ServiceAccount
    name: default
    namespace: azuredevops
roleRef:
  kind: ClusterRole
  name: admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-poolprovider
  namespace: azuredevops
  labels:
    app: k8s-poolprovider
spec:
  type: LoadBalancer
  ports:
    - port: 8082
  selector:
    app: k8s-poolprovider
    tier: frontend
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: k8s-poolprovider
  namespace: azuredevops
  labels:
    app: k8s-poolprovider
spec:
  template:
    metadata:
      labels:
        app: k8s-poolprovider
        tier: frontend
    spec:
      containers:
      - image: prebansa/k8s-poolprovider:v1.3s
        name: k8s-poolprovider
        command: ["/app/main"]
        ports:
        - containerPort: 8082
        volumeMounts:
        - name: tls-secret
          mountPath: /secure/
      volumes:
      - name: tls-secret
        secret:
          secretName: tls-secret
---
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWVENDQWoyZ0F3SUJBZ0lKQUlJSjIzLzZBWUFrTUEwR0NTcUdTSWIzRFFFQkN3VUFNRUV4Q3pBSkJnTlYKQkFZVEFrbE9NUkV3RHdZRFZRUUlEQWhVWld4aGJtZHVZVEVTTUJBR0ExVUVCd3dKU0hsa1pYSmhZbUZrTVFzdwpDUVlEVlFRS0RBSk5VekFlRncweE9UQTVNVE13TlRJeE5EbGFGdzB5T1RBNU1UQXdOVEl4TkRsYU1FRXhDekFKCkJnTlZCQVlUQWtsT01SRXdEd1lEVlFRSURBaFVaV3hoYm1kdVlURVNNQkFHQTFVRUJ3d0pTSGxrWlhKaFltRmsKTVFzd0NRWURWUVFLREFKTlV6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUx5NwpNN2c4QWhxNW9UUEs4Y3pOSExrUHgxR01FMmo3NFVUN2J4N3pHaVIvZlJJSWpTcHptUUE4NzRZSkhLcmpaZW84CmtaQ3Irc0dBTDFES1NuLzArYlpBVG5xSVJYcE9GNDJ3RllyWHZpVjZKc1RzcjFVMC91OUdZK2ZUTjlDbWl3bU0KYVVNbTBySkJSYnAvM2JVblRheVNZWkt1SVcxMHlBVC9tSTdiSFQrM1RibllFYnVSK21ZMGZsK2IxdU03dlZDMwpLRFYzdk5jblg1Q3JWSDBIMC90cU9vZVlVV28xM0ZFQmkzY2kvWTBnd0xRaDZ5MWhOQnRvZGxBQnR2Y0hHOHR4CjVFaE9xRVNDT3krSmFDcHE5MS92a3I5T3F3QVB2QTBWai9qeW8yNzZBTzRFWEdUVGkwalMrdDVjVUR1RTk3UjEKdFluMEU0QWUvUE9FczlwQVA3MENBd0VBQWFOUU1FNHdIUVlEVlIwT0JCWUVGRW9KME52aXNORE8yZk9ROUcwNAowcjJ0NFZNY01COEdBMVVkSXdRWU1CYUFGRW9KME52aXNORE8yZk9ROUcwNDByMnQ0Vk1jTUF3R0ExVWRFd1FGCk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlHQ1RTZ2F1NDVlTlR5RzE2bVpabzdMUSs0Qk84dTUKTUZYT1VOM0piRXk2dnhYZ0paU1BYZ2w3RW9JZzRadENtWWgrcGNBcTFuaWs5OTFZcVlCZ2daOU5sQzV4T0hqTQpzbjRpRUxYNmxBU0hmQXo3bG9xT2liMDA0ZDQrY1ZtK3JtVU9VVk84cUl3Z0w1RU1NOU5wUHdBaDFZTXRzbjc4Cnd3K2ZPOXJrYVZEaTJYME14aTVscFFmVUpKSjlSN044WHRLUkJ6R05kdjJmN0VocE5oUGpFRDUxdnBxSE02MHMKYm1RTnppNnZlbi9oWFJUbytITU53V2ZlNGE2UEVKV3lCV2NUa3ZNUEhtS1BnZFVtUUdGL2R3YjAvc1FJRXBUWgpOZXFaN1BmbklHWHhXcVhWd2EzUXArdXRlV002ZHpKSW14SjN1WUxvZXdEUk81WGRxMHNxWHNVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tlskey.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQzh1ek80UEFJYXVhRXoKeXZITXpSeTVEOGRSakJObysrRkUrMjhlOHhva2YzMFNDSTBxYzVrQVBPK0dDUnlxNDJYcVBKR1FxL3JCZ0M5UQp5a3AvOVBtMlFFNTZpRVY2VGhlTnNCV0sxNzRsZWliRTdLOVZOUDd2Um1QbjB6ZlFwb3NKakdsREp0S3lRVVc2CmY5MjFKMDJza21HU3JpRnRkTWdFLzVpTzJ4MC90MDI1MkJHN2tmcG1OSDVmbTliak83MVF0eWcxZDd6WEoxK1EKcTFSOUI5UDdhanFIbUZGcU5keFJBWXQzSXYyTklNQzBJZXN0WVRRYmFIWlFBYmIzQnh2TGNlUklUcWhFZ2pzdgppV2dxYXZkZjc1Sy9UcXNBRDd3TkZZLzQ4cU51K2dEdUJGeGswNHRJMHZyZVhGQTdoUGUwZGJXSjlCT0FIdnp6CmhMUGFRRCs5QWdNQkFBRUNnZ0VBS0VtMkFyQWNxdVBSZTZMbzl4VVorbzladHhpMTFBVmcwejd4TzZRZGdva00KZzlyN2Q0Snh1TkZKT0UyZHB3VWY3bDY3bkN4NlBQQkdLWExsY0djMUh5aWZHQjBhNTc3ZjNFa29jQmtaNkJvcApTSVJWOFZSOHowc3hiSDEwUHNBdWtmMDlReTU0YjhEclI2S2dDMW0yaFE1Q2NmTm1BMTJZalNpYXduUVh6RS9RCm41ZGl0Z3E0YjB6SERZTldya2Y3cUk0OEdkZGdjZEx4TzlsdkRIbXdyMXlpRVdsSjhHSTNuVFRxb2RNakcrUFkKa2lidk94U2pHMk1CVW9Sb3daWllPRkdqUDlEMlBXUVd4RWVhc2YxZDRlOFI5RnZaTklHeFFnY2V3am9MMUh6RApwMWJIR09UN1l6aEwzSytSNzNtZmhjSEp2T3NpL2lmbzM1V3NjdXFWYVFLQmdRRHpHVjVWWml4Ykc4anRDNkprCnpVQTkwMVNNZ2kvVmFvekFqa0ZNKzJwRHc4ODc5MG41aU1QTGYyUHJyQlZrNUlxZ1lBcEk3ajV4QUxpZ3NqWUUKWmNSVkQrY2xqMmxnTmowcDZiWGtkeFRHMGd4MzdDSXVkcEhLYmZQWmtYY1VYNHZ5dGsxVmcyUFRKTk5kbHRKKwpSNm1sYW55K09ka1k2SlZwcDBoRnM4Nnk0d0tCZ1FER3Z6ZWlpdk1aaHJYMnpzbm00Q3Y5cXhqMlBjYVFIZmVQClFndU45NnBzcVdaWFJvQWd1KzRocWd0R0FYcFk0d1BwR2xCVnJ5blNjQzA5eUNUY3pSUGwrWXAxeXhTc25wRm8KT01wcm9IT0J0Qy8yTTRDUEgwVDNPZVZaUm41VzFpNHdzTTcwSmc0dWZsTzdmYmFSVFZpS1Fnc2dzUndLdFRPVwp2MG52SlZPazN3S0JnUUNYam1kTFlvbWd1Mi9HcVF3elArc2ZJRk9EemQ0NGRWY083U0UwOTBGR3docSt6ZXJtCmtTZFFCVG1zUWZxTWpoY0c2UmxBWXBlM0o3WHpLV2VYMGtKV3JiVnpxemNNN29PdlQ2OUFvaVRuMXloQzA0cHoKNFNQL1NoRk93T3UyWGVNSURET21ibVdieTBlaS8xWjN1QUhCeU9QQVRKeFdkUnBCWmpNZWtYejU5UUtCZ0JBbQpCMUk0c2duMzdSOFJyRXdMR09meW1BT2gvMWxFWmhJSXpzR0pSeHF2SlBhZ2J0YTZEbDVEMzhpZlpCNkd5NUdNCkpzemZmNmx1bmU1d0xiYVhIeS9IZDkyY1U2QzIvWitYUmJNN0JVZWJxVzM2djA1aHZ3dkxjM3d1Z3lOeElhMnAKSUJlc1kraVpNUnFCMjJ5dytTbTZ0Z2JBL1VOTmQ5U2UxRllQRlYzSEFvR0JBSTRCVnZ3VkNvU2hwcHZSWGROUQo4NUx0R1d2WkNMZ2dWWVdFTEZ2S3VZbHVIbGJycnNCY2JsRElFRmNXREp4K2E4Y3htQ1hzb1ZMSm8xVTFoSHJNCklVd3FMQ1AyR0o4VFJON01yK29Za0VwWjc2R3R0cUx6ZkNQOUtGWWNLdnVJMDBQem1aUXBTcGIxQ2R0NzcwU1kKRjBkTFl3V2lFdHhyRTdVZFEvRkxFaGFBCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
type: Opaque
kind: Secret
metadata:
  creationTimestamp: null
  name: tls-secret
  namespace: azuredevops
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: k8s-poolprovider
  namespace: azuredevops
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  labels:
    app: k8s-poolprovider
spec:
  tls:
  - hosts:
    - k8s-poolprovider
    secretName: tls-secret
  rules:
  - host: k8s-poolprovider
    http:
     paths:
     - path: /*   
       backend:
         serviceName: k8s-poolprovider
         servicePort: 8082
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-poolprovider-redis
  namespace: azuredevops
  labels:
    app: k8s-poolprovider
spec:
  ports:
    - port: 6379
  selector:
    app: k8s-poolprovider
    tier: redis
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: k8s-poolprovider-redis
  namespace: azuredevops
  labels:
    app: k8s-poolprovider
spec:
  template:
    metadata:
      labels:
        app: k8s-poolprovider
        tier: redis
    spec:
      containers:
      - image: redis:3-alpine
        name: redis
        ports:
        - containerPort: 6379
          name: redis